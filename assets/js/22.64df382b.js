(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{356:function(v,_,e){"use strict";e.r(_);var t=e(42),o=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"css"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[v._v("#")]),v._v(" Css")]),v._v(" "),e("h2",{attrs:{id:"两种盒模型分别说一下"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#两种盒模型分别说一下"}},[v._v("#")]),v._v(" 两种盒模型分别说一下")]),v._v(" "),e("ol",[e("li",[e("strong",[v._v("W3C的标准盒模型(标准盒子模型)")])])]),v._v(" "),e("p",[v._v("在标准的盒子模型中，width指content部分的宽度")]),v._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("strong",[v._v("IE盒模型")])])]),v._v(" "),e("p",[v._v("在IE盒子模型中，width表示content+padding+border这三个部分的宽度")]),v._v(" "),e("h2",{attrs:{id:"flex怎么用，常用的属性有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex怎么用，常用的属性有哪些"}},[v._v("#")]),v._v(" Flex怎么用，常用的属性有哪些")]),v._v(" "),e("p",[v._v("使用了 display: flex 后会形成一个容器盒子。")]),v._v(" "),e("p",[e("strong",[e("code",[v._v("justify-content：items")]),v._v(" 在主轴上的对齐方式")])]),v._v(" "),e("ul",[e("li",[e("code",[v._v("center")]),v._v("：居中对齐")]),v._v(" "),e("li",[e("code",[v._v("flex-start")]),v._v("：对齐主轴起始端")]),v._v(" "),e("li",[e("code",[v._v("flex-end")]),v._v("：与 flex-start 相反")]),v._v(" "),e("li",[e("code",[v._v("space-between")]),v._v("：两端对齐，items中间间隔相等")]),v._v(" "),e("li",[e("code",[v._v("space-around")]),v._v("：和 space-between 类似，但是每个 item 两侧间隔相等")])]),v._v(" "),e("p",[e("strong",[e("code",[v._v("align-items：items")]),v._v(" 在交叉轴（即与主轴垂直的方向）上的对齐方式")])]),v._v(" "),e("ul",[e("li",[e("code",[v._v("center")]),v._v("：居中对齐")]),v._v(" "),e("li",[e("code",[v._v("flex-start")]),v._v("：对齐交叉轴起始端")]),v._v(" "),e("li",[e("code",[v._v("flex-end")]),v._v("：与 flex-start 相反")]),v._v(" "),e("li",[e("code",[v._v("baseline")]),v._v("：以每个 item 的第一行文字的基线对齐")]),v._v(" "),e("li",[e("code",[v._v("stretch")]),v._v("：默认，若 items 没有设置 height 或设置为auto，则撑满容器")])]),v._v(" "),e("p",[e("strong",[e("code",[v._v("flex-direction:items")]),v._v(" 设置主轴，items 在主轴上的排列方向")])]),v._v(" "),e("ul",[e("li",[e("code",[v._v("row")]),v._v("：默认，水平方向，从左开始")]),v._v(" "),e("li",[e("code",[v._v("row-reverse")]),v._v("：水平方向，从右开始")]),v._v(" "),e("li",[e("code",[v._v("column")]),v._v("：垂直方向，从上开始")]),v._v(" "),e("li",[e("code",[v._v("column-reverse")]),v._v("：垂直方向，从下开始")])]),v._v(" "),e("p",[e("strong",[e("code",[v._v("flex-wrap:items")]),v._v("：换行，items 在主轴方向上是否换行")])]),v._v(" "),e("ul",[e("li",[e("code",[v._v("nowrap")]),v._v("：默认，不换行")]),v._v(" "),e("li",[e("code",[v._v("wrap")]),v._v("：换行")]),v._v(" "),e("li",[e("code",[v._v("wrap-reverse")]),v._v("：换行（反向）")])]),v._v(" "),e("p",[e("strong",[v._v("属性、值")])]),v._v(" "),e("ul",[e("li",[e("code",[v._v("order")]),v._v("：定义当前 item 在整个items 里的顺序位置，值越小排在越前，可接受负数")]),v._v(" "),e("li",[e("code",[v._v("flex-grow")]),v._v("：放大比例，默认为0")]),v._v(" "),e("li",[e("code",[v._v("flex-shrink")]),v._v("：缩小比例，默认为1，设为0表示不缩小")]),v._v(" "),e("li",[e("code",[v._v("flex-basis")]),v._v("：在分配剩余空间之前，设置 item 占据的主轴空间，默认为auto，表示 item 原始大小")])]),v._v(" "),e("h2",{attrs:{id:"bfc是什么，什么属性可以触发bfc？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bfc是什么，什么属性可以触发bfc？"}},[v._v("#")]),v._v(" BFC是什么，什么属性可以触发BFC？")]),v._v(" "),e("p",[v._v('BFC(Block formatting context)直译为"块级格式化上下文"。它是一个独立的渲染区域，只有Block-level box参与， 它规定了内部的Block-level Box如何布局，并且与这个区域外部毫不相干。')]),v._v(" "),e("p",[v._v("在解释什么是BFC之前，我们需要先知道Box、Formatting Context的概念。")]),v._v(" "),e("p",[e("strong",[v._v("1. Box：css布局的基本单位")])]),v._v(" "),e("p",[v._v("Box 是 CSS 布局的对象和基本单位， 直观点来说，就是一个页面是由很多个 Box 组成的。元素的类型和 display 属性，决定了这个 Box 的类型。 不同类型的 Box， 会参与不同的 Formatting Context（一个决定如何渲染文档的容器），因此Box内的元素会以不同的方式渲染。让我们看看有哪些盒子：")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("block-level box")]),v._v(": display 属性为 block, list-item, table 的元素，会生成 block-level box。并且参与 block fomatting context；")]),v._v(" "),e("li",[e("code",[v._v("inline-level box")]),v._v(": display 属性为 inline, inline-block, inline-table 的元素，会生成 inline-level box。并且参与 inline formatting context；")])]),v._v(" "),e("p",[e("strong",[v._v("2. Formatting Context")]),v._v("\nFormatting context 是 W3C CSS2.1 规范中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。最常见的 Formatting context 有 Block fomatting context (简称BFC)和 Inline formatting context (简称IFC)。")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("BFC")]),v._v(" "),e("p",[v._v("BFC是一个独立的布局环境，其中的元素布局是不受外界的影响，并且在一个BFC中，块盒与行盒（行盒由一行中所有的内联元素所组成）都会垂直的沿着其父元素的边框排列。")])]),v._v(" "),e("p",[e("strong",[v._v("3. BFC的布局规则")])]),v._v(" "),e("ul",[e("li",[v._v("内部的Box会在垂直方向，一个接一个地放置。")]),v._v(" "),e("li",[v._v("Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生重叠。")]),v._v(" "),e("li",[v._v("每个盒子（块盒与行盒）的margin box的左边，与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。")]),v._v(" "),e("li",[v._v("BFC的区域不会与float box重叠。")]),v._v(" "),e("li",[v._v("BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。")]),v._v(" "),e("li",[v._v("计算BFC的高度时，浮动元素也参与计算。")])]),v._v(" "),e("p",[e("strong",[v._v("4. 如何创建BFC")])]),v._v(" "),e("ul",[e("li",[v._v("float的值不是none。")]),v._v(" "),e("li",[v._v("position的值不是static或者relative。")]),v._v(" "),e("li",[v._v("display的值是inline-block、table-cell、flex、table-caption或者inline-flex")]),v._v(" "),e("li",[v._v("overflow的值不是visible")])]),v._v(" "),e("p",[e("strong",[v._v("5. BFC的作用")])]),v._v(" "),e("ul",[e("li",[v._v("利用BFC避免margin重叠。")]),v._v(" "),e("li",[v._v("清楚浮动")])]),v._v(" "),e("h2",{attrs:{id:"css选择器的优先级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css选择器的优先级"}},[v._v("#")]),v._v(" CSS选择器的优先级")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("！important")]),v._v(" 特殊性最高")]),v._v(" "),e("li",[v._v("对于"),e("code",[v._v("内联样式")]),v._v("，权重"),e("code",[v._v("1000")])]),v._v(" "),e("li",[e("code",[v._v("ID选择器")]),v._v("，权重"),e("code",[v._v("100")])]),v._v(" "),e("li",[e("code",[v._v("类选择器")]),v._v(","),e("code",[v._v("伪类")]),v._v("，权重"),e("code",[v._v("10")])]),v._v(" "),e("li",[e("code",[v._v("元素选择器")]),v._v("，"),e("code",[v._v("伪元素")]),v._v("，权重"),e("code",[v._v("1")]),v._v(".")]),v._v(" "),e("li",[e("code",[v._v("通配符选择器")]),v._v("，权重"),e("code",[v._v("0")])])]),v._v(" "),e("h2",{attrs:{id:"如何垂直居中"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何垂直居中"}},[v._v("#")]),v._v(" 如何垂直居中")]),v._v(" "),e("p",[v._v("有很多种方法")])])}),[],!1,null,null,null);_.default=o.exports}}]);