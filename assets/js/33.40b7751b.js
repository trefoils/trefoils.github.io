(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{358:function(v,_,t){"use strict";t.r(_);var e=t(42),r=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"客户机-服务器交互模式-c-s"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#客户机-服务器交互模式-c-s"}},[v._v("#")]),v._v(" 客户机/服务器交互模式(C/S)")]),v._v(" "),t("p",[v._v("在计算机网络环境中，运行于协议栈之上并借助协议栈实现通信的网络应用程序称为网络应用进程。进程就是运行中的程序，往往通过位于不同主机中的多个应用进程之间的通信和协同工作，来解决具体的网络应用问题。网络应用进程通信时，普遍采用客户机/服务器交互模式（Client-Server Paradigm ofInteraction），简称C/S模式。这是Internet上应用程序最常用的通信模式，即客户向服务器发出服务请求，服务器接收到请求后，提供相应的服务。")]),v._v(" "),t("p",[v._v("C/S模式的建立基于以下两点：首先，建立网络的起因是网络中软硬件资源、运算能力和信息不均等，需要共享，从而造就拥有众多资源的主机提供服务，资源较少的客户请求服务这一非对等关系；其次，网间进程通信完全是异步的，相互通信的进程间既不存在父子关系，又不共享内存缓冲区，因此需要一种机制为希望通信的进程间建立联系，为二者的数据交换提供同步。")]),v._v(" "),t("p",[v._v("C/S模式过程中"),t("code",[v._v("服务器")]),v._v("处于被动服务的地位。首先服务器方要先启动，并根据客户请求提供相应服务。")]),v._v(" "),t("h2",{attrs:{id:"服务器的工作过程："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务器的工作过程："}},[v._v("#")]),v._v(" 服务器的工作过程：")]),v._v(" "),t("p",[v._v("首先服务器方要先启动，并根据客户请求提供相应服务，服务器处于被动服务的地位。")]),v._v(" "),t("ol",[t("li",[v._v("打开一通信通道，并告知服务器所在的主机，它愿意在某一公认的地址上（熟知端口，如FTP为21）接收客户请求。")]),v._v(" "),t("li",[v._v("等待客户的请求到达该端口。")]),v._v(" "),t("li",[v._v("服务器接收到服务请求，处理该请求并发送应答信号。为了能并发地接收多个客户的服务请求，要激活一个新进程或新线程来处理这个客户请求（如UNIX系统中用fork、exec）。服务完成后，关闭此新进程与客户的通信通路，并终止。")]),v._v(" "),t("li",[v._v("返回第（2）步，等待并处理另一客户请求。")]),v._v(" "),t("li",[v._v("在特定的情况下，关闭服务器。")])]),v._v(" "),t("h2",{attrs:{id:"客户机的工作过程："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#客户机的工作过程："}},[v._v("#")]),v._v(" 客户机的工作过程：")]),v._v(" "),t("p",[v._v("客户方采取的是主动请求方式。")]),v._v(" "),t("ol",[t("li",[v._v("打开一通信通道，并连接到服务器所在主机的特定监听端口。")]),v._v(" "),t("li",[v._v("向服务器发送请求报文，等待并接收应答，然后继续提出请求。与服务器的会话按照应用协议进行。")]),v._v(" "),t("li",[v._v("请求结束后，关闭通信通道并终止。")])]),v._v(" "),t("h2",{attrs:{id:"客户机与服务器的特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#客户机与服务器的特性"}},[v._v("#")]),v._v(" 客户机与服务器的特性")]),v._v(" "),t("p",[t("strong",[v._v("客户端软件")])]),v._v(" "),t("ol",[t("li",[v._v("在进行网络通信时临时成为客户机，但它也可在本地进行其他的计算。")]),v._v(" "),t("li",[v._v("被用户调用，只为一个会话运行。在打算通信时主动向远地服务器发起通信。")]),v._v(" "),t("li",[v._v("能访问所需的多种服务，但在某一时刻只能与一个远程服务器进行主动通信。")]),v._v(" "),t("li",[v._v("主动地启动与服务器的通信。")]),v._v(" "),t("li",[v._v("在用户的计算机上运行，不需要特殊的硬件和很复杂的操作系统。")])]),v._v(" "),t("p",[t("strong",[v._v("服务器软件")])]),v._v(" "),t("ol",[t("li",[v._v("是一种专门用来提供某种服务的程序，可同时处理多个远地客户机的请求。")]),v._v(" "),t("li",[v._v("当系统启动时即自动调用，并且连续运行着，不断地为多个会话服务。")]),v._v(" "),t("li",[v._v("接收来自任何客户机的通信请求，但只提供一种服务。")]),v._v(" "),t("li",[v._v("被动地等待并接收来自多个远端客户机的通信请求。")]),v._v(" "),t("li",[v._v("在共享计算机上运行，一般需要强大的硬件和高级的操作系统支持。")])]),v._v(" "),t("h2",{attrs:{id:"基于internet的c-s模式的应用程序的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基于internet的c-s模式的应用程序的特点"}},[v._v("#")]),v._v(" 基于Internet的C/S模式的应用程序的特点")]),v._v(" "),t("ol",[t("li",[v._v("客户机和服务器都是软件进程，C/S模式是网络上通过进程通信建立分布式应用的常用模型。")]),v._v(" "),t("li",[v._v("非对称性：服务器通过网络提供服务，客户机通过网络使用服务，这种不对称性体现在软件结构和工作过程上。")]),v._v(" "),t("li",[v._v("对等性：客户机和服务器必有一套共识的约定，必与某种应用层协议相联，并且必须在通信的两端实现协议。例如，浏览器和WWW服务器就都基于超文本传输协议（HTTP）。")]),v._v(" "),t("li",[v._v("服务器的被动性：服务器必须先行启动，时刻监听，日夜值守，及时服务，只要有客户机请求，就立即处理并响应、回传信息，但决不主动提供服务。")]),v._v(" "),t("li",[v._v("客户机的主动性：客户机可以随时提出请求，通过网络得到服务，也可以关机离开，一次请求与服务的过程是由客户机首先激发的。")]),v._v(" "),t("li",[v._v("一对多：一个服务器可以为多个客户机服务；客户机也可以打开多个窗口，连接多个服务器。")]),v._v(" "),t("li",[v._v("分布性与共享性：资源在服务器端组织与存储，通过网络为分散的多个客户机使用。")])]),v._v(" "),t("h2",{attrs:{id:"客户机与服务器的通信过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#客户机与服务器的通信过程"}},[v._v("#")]),v._v(" 客户机与服务器的通信过程")]),v._v(" "),t("ol",[t("li",[v._v("在通信可以进行之前，服务器应先行启动，并通知它的下层协议栈做好接收客户机请求的准备，然后被动地等待客户机的通信请求。我们称服务器处于监听状态。")]),v._v(" "),t("li",[v._v("一般是先由客户机向服务器发送请求，服务器向客户机返回应答。客户机随时可以主动启动通信，向服务器发出连接请求，服务器接收这个请求后，建立它们之间的通信关系。")]),v._v(" "),t("li",[v._v("客户机与服务器的通信关系一旦建立，客户机和服务器都可发送和接收信息。信息在客户机与服务器之间可以沿任一方向或两个方向传递。在某些情况下，客户机向服务器发送一系列请求，服务器相应地返回一系列应答。")])]),v._v(" "),t("h2",{attrs:{id:"网络协议与c-s模式的关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络协议与c-s模式的关系"}},[v._v("#")]),v._v(" 网络协议与C/S模式的关系")]),v._v(" "),t("p",[v._v("客户机与服务器作为两个软件实体，它们之间的通信是虚拟的，是概念上的；实际的通信要借助下层的网络协议栈来进行。在发送端，信息自上向下传递，每层协议实体都加上自己的协议报头，传到物理层，将数据变为信号传输出去；在接收端，信息自下向上传递，每层协议实体按照本层的协议报头进行处理，然后将本层报头剥去。例如，在Internet中，客户机与服务器借助传输层协议（TCP或UDP）来收发信息。传输层协议接着使用更低层的协议来收发自己的信息。因此，一台计算机，不论是运行客户机程序还是服务器程序，都需要一个完整的协议栈。大多数的应用进程都是使用TCP/IP进行通信。一对客户机与服务器使用TCP/IP协议栈，分别通过传输协议在Internet上进行交互通信。")]),v._v(" "),t("h2",{attrs:{id:"错综复杂的c-s交互"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#错综复杂的c-s交互"}},[v._v("#")]),v._v(" 错综复杂的C/S交互")]),v._v(" "),t("p",[v._v("客户机与服务器之间的交互是任意的，在实际的网络应用中，往往形成错综复杂的C/S交互局面，这是C/S模式最有趣也是最有用的功能。")]),v._v(" "),t("p",[v._v("客户机应用访问某一类服务时并不限于一个服务器。在Internet的各种服务中，在不同计算机上运行的服务器程序会提供不同的信息。例如，一个日期服务器程序可能给出它所运行的计算机的当前日期和时间，处于不同时区的计算机上的服务器程序会给出不同的回答。同一个客户机应用能够先是某个服务器程序的客户机，以后又与另一台计算机上的服务器程序通信，成为另一个服务器程序的客户机。例如，用户使用IE浏览器，先浏览雅虎网站，再浏览搜狐网站，就是这种情况。")]),v._v(" "),t("p",[t("strong",[v._v("在C/S模式中，存在着3种"),t("code",[v._v("一个与多个")]),v._v("的关系")])]),v._v(" "),t("ol",[t("li",[v._v("一个服务器同时为多个客户机服务：在Internet上的各种服务器，如WWW服务器、电子邮件服务器和文件传输服务器等，都能同时为多个客户机服务。例如，在一个网吧中，几十个人都在浏览网易网站的页面，但每个人都感觉不到别人对自己的影响。其实，今天Internet上的服务器，往往同时接待着成千上万个客户机。但服务器所在的计算机可能只有一个通往Internet的物理连接。")]),v._v(" "),t("li",[v._v("一个用户的计算机上同时运行多个连接不同服务器的客户机：有经验的网友都知道，在Windows的桌面上，可以同时打开多个浏览器的窗口，每个窗口连接一个网站，这样可以加快下载的速度。当在一个窗口中浏览的时候，可能另一个窗口正在下载页面文件或图像。在这里，一个浏览器的窗口，就是一个浏览器软件的运行实例，就是一个作为客户机的应用进程，它与一个服务器建立一个连接关系，支持与该服务器的会话。这样，用户的PC中就同时运行着多个客户机，分别连接着不同的服务器。同样，用户的PC也只有一个通往Internet的物理连接。")]),v._v(" "),t("li",[v._v("一个服务器类的计算机同时运行多个服务器：一套足够强大的计算机系统能够同时运行多个服务器进程。在这样的系统上，对应提供的每种服务都有一个服务器程序在运行。例如，一台计算机可能同时运行文件服务器和WWW服务器。下图说明了两台计算机上的客户机程序访问第3台计算机上的两个服务器。虽然一台计算机上能运行多种服务，但它与Internet只需有一个物理连接。")])]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/study/network/cs-server.jpeg",alt:"images"}})]),v._v(" "),t("p",[v._v("一台服务器类计算机能够同时提供多种服务，每种服务需要一个独立的服务器程序。在一台计算机上运行多种服务是实际可行的，经验告诉我们，对服务器的需求往往很分散，一个服务器可能在很长一段时间里一直处于空闲状态。空闲的服务器在等待请求到来时是不占用计算机的CPU等计算资源的。这样，如果对服务的要求量比较小，将多个服务器合并到一台计算机上，会在不明显降低性能的情况下大幅度地降低开销。")]),v._v(" "),t("p",[v._v("让一台计算机运行多种服务是很有用的，因为这样硬件可以被多个服务所共享。将多个服务器合并到一台大型的服务器类的计算机上也有助于减轻系统管理员的负担，因为对系统管理员来说计算机系统减少了。当然，要获得最佳性能，必须将每个服务器和客户机程序分别运行在不同的计算机上。")]),v._v(" "),t("p",[v._v("要实现C/S模式中这3种一对多的关系，需要两方面的支持。首先，这台计算机必须拥有足够的硬件资源，尤其是服务器类计算机，必须具有足够的能力，要拥有快速的处理器和足够的内存与外存。其次，这台计算机必须运行支持多个应用程序并发执行的操作系统平台，例如，UNIX或Windows操作系统。")])])}),[],!1,null,null,null);_.default=r.exports}}]);