(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{385:function(t,a,r){"use strict";r.r(a);var s=r(42),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"javascript"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" Javascript")]),t._v(" "),r("h2",{attrs:{id:"new一个新实例的过程是怎样的？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#new一个新实例的过程是怎样的？"}},[t._v("#")]),t._v(" new一个新实例的过程是怎样的？")]),t._v(" "),r("ol",[r("li",[t._v("创建一个空对象，并且 this 变量引用该对象，同时还继承了该函数的原型。")]),t._v(" "),r("li",[t._v("属性和方法被加入到 this 引用的对象中。")]),t._v(" "),r("li",[t._v("新创建的对象由 this 所引用，并且最后隐式的返回 this.")])]),t._v(" "),r("h2",{attrs:{id:"js的原型链是怎么理解的？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js的原型链是怎么理解的？"}},[t._v("#")]),t._v(" Js的原型链是怎么理解的？")]),t._v(" "),r("p",[r("img",{attrs:{src:"/images/interview/proto.jpg",alt:"images"}})]),t._v(" "),r("h3",{attrs:{id:"原型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[t._v("#")]),t._v(" 原型")]),t._v(" "),r("ul",[r("li",[t._v("任何函数都有 prototype 属性")]),t._v(" "),r("li",[t._v("函数的prototype属性值是个对象，我们把这个对象叫做原型（原型对象）")]),t._v(" "),r("li",[t._v("通过构造函数创建的实例可以直接访问构造函数的prototype属性上的任何成员")]),t._v(" "),r("li",[t._v("任何对象都有proto 属性, 指向的是构造函数的prototype属性，也就是原型constructor 属性是原型中自带的属性，指向了当前的构造函数")])]),t._v(" "),r("h3",{attrs:{id:"原型链"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),r("p",[t._v("任何对象都有proto属性，指向的是原型对象，原型对象也是对象，那也有proto属性，也就是说原型对象也有自己的原型对象。这样形成的链式结构，叫做原型链")]),t._v(" "),r("p",[r("strong",[t._v("一篇写的很不错的文章"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/22989691",target:"_blank",rel:"noopener noreferrer"}},[t._v("可参考"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"js的闭包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js的闭包"}},[t._v("#")]),t._v(" Js的闭包")]),t._v(" "),r("p",[t._v("闭包是指有权访问另一个函数作用域中的变量的函数")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("function a () {\n  var x = 123;\n  function b() {\n    console.log(x);\n  }\n  return b;\n}\n\nvar b = a();\nb();  // 123\n")])])]),r("h3",{attrs:{id:"闭包优缺点："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#闭包优缺点："}},[t._v("#")]),t._v(" 闭包优缺点：")]),t._v(" "),r("p",[r("strong",[t._v("优点：")])]),t._v(" "),r("p",[t._v("1、属性的私有化，在b返回后，出了b函数中能对x进行操作，其它地方都不能对x进行操作。")]),t._v(" "),r("p",[t._v("2、防止变量污染。")]),t._v(" "),r("p",[r("strong",[t._v("缺点：")])]),t._v(" "),r("p",[t._v("容易造成内存泄漏，因为如果后期不对全局中的b进行处理（例如：赋值为null）;")])])}),[],!1,null,null,null);a.default=e.exports}}]);